{"version":3,"sources":["forms-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,SAAS,QAAT,CAAkB,IAAlB,EAAwB,QAAxB,EAAkC;AAC9B;AACA,QAAI,IAAI,SAAS,aAAT,CAAuB,OAAvB,CAAR;;AAEA;AACA,SAAK,WAAL,CAAiB,CAAjB;AACA,MAAE,IAAF,GAAS,GAAT;AACA,MAAE,IAAF,GAAS,QAAT;AACA,MAAE,KAAF,GAAU,WAAW,SAAS,KAApB,CAAV;;AAEA;AACA,aAAS,KAAT,GAAiB,EAAjB;;AAEA;AACA,SAAK,MAAL;AACH;;AAED,SAAS,WAAT,CAAqB,IAArB,EAA2B,GAA3B,EAAgC,KAAhC,EAAuC,QAAvC,EAAiD,IAAjD,EAAuD;AACnD;AACA,QAAI,IAAI,KAAJ,IAAa,EAAb,IAAmB,MAAM,KAAN,IAAe,EAAlC,IAAwC,SAAS,KAAT,IAAkB,EAA1D,IAAgE,KAAK,KAAL,IAAc,EAAlF,EAAsF;AAClF,cAAM,qCAAN;AACA,eAAO,KAAP;AACH;;AAED;AACA,SAAK,OAAL;AACA,QAAI,CAAC,GAAG,IAAH,CAAQ,KAAK,QAAL,CAAc,KAAtB,CAAL,EAAmC;AAC/B,cAAM,iDAAN;AACA,aAAK,QAAL,CAAc,KAAd;AACA,eAAO,KAAP;AACH;;AAED;AACA;AACA;AACA,QAAI,SAAS,KAAT,CAAe,MAAf,GAAwB,CAA5B,EAA+B;AAC3B,cAAM,0HAAN;AACA,aAAK,QAAL,CAAc,KAAd;AACA,eAAO,KAAP;AACH;;AAED;AACA;AACA,QAAI,KAAK,qCAAT;AACA,QAAI,CAAC,GAAG,IAAH,CAAQ,SAAS,KAAjB,CAAL,EAA8B;AAC1B,cAAM,0HAAN;AACA,eAAO,KAAP;AACH;;AAED;AACA,QAAI,SAAS,KAAT,IAAkB,KAAK,KAA3B,EAAkC;AAC9B,cAAM,4DAAN;AACA,aAAK,QAAL,CAAc,KAAd;AACA,eAAO,KAAP;AACH;;AAED;AACA,QAAI,IAAI,SAAS,aAAT,CAAuB,OAAvB,CAAR;;AAEA;AACA,SAAK,WAAL,CAAiB,CAAjB;AACA,MAAE,IAAF,GAAS,GAAT;AACA,MAAE,IAAF,GAAS,QAAT;AACA,MAAE,KAAF,GAAU,WAAW,SAAS,KAApB,CAAV;;AAEA;AACA,aAAS,KAAT,GAAiB,EAAjB;AACA,SAAK,KAAL,GAAa,EAAb;;AAEA;AACA,SAAK,MAAL;AACA,WAAO,IAAP;AACH;;AAED","file":"forms-compiled-compiled.js","sourcesContent":["\"use strict\";\n\nfunction formhash(form, password) {\n    // Create a new element input, this will be our hashed password field.\n    var p = document.createElement(\"input\");\n\n    // Add the new element to our form.\n    form.appendChild(p);\n    p.name = \"p\";\n    p.type = \"hidden\";\n    p.value = hex_sha512(password.value);\n\n    // Make sure the plaintext password doesn't get sent.\n    password.value = \"\";\n\n    // Finally submit the form.\n    form.submit();\n}\n\nfunction regformhash(form, uid, email, password, conf) {\n    // Check each field has a value\n    if (uid.value == '' || email.value == '' || password.value == '' || conf.value == '') {\n        alert('Te rugam sa introduci toate datele.');\n        return false;\n    }\n\n    // Check the username\n    re = /^\\w+$/;\n    if (!re.test(form.username.value)) {\n        alert(\"Numele poate contine doar litere, numere . '_' \");\n        form.username.focus();\n        return false;\n    }\n\n    // Check that the password is sufficiently long (min 6 chars)\n    // The check is duplicated below, but this is included to give more\n    // specific guidance to the user\n    if (password.value.length < 6) {\n        alert('Parola trebuie sa aiba cel putin 6 caractere si sa contina o litera mare, una mica si cifre. Te rugam sa incerci din nou');\n        form.password.focus();\n        return false;\n    }\n\n    // At least one number, one lowercase and one uppercase letter\n    // At least six characters\n    var re = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/;\n    if (!re.test(password.value)) {\n        alert('Parola trebuie sa aiba cel putin 6 caractere si sa contina o litera mare, una mica si cifre. Te rugam sa incerci din nou');\n        return false;\n    }\n\n    // Check password and confirmation are the same\n    if (password.value != conf.value) {\n        alert('Cele doua parole nu corespund. Te rugam sa incerci din nou');\n        form.password.focus();\n        return false;\n    }\n\n    // Create a new element input, this will be our hashed password field.\n    var p = document.createElement(\"input\");\n\n    // Add the new element to our form.\n    form.appendChild(p);\n    p.name = \"p\";\n    p.type = \"hidden\";\n    p.value = hex_sha512(password.value);\n\n    // Make sure the plaintext password doesn't get sent.\n    password.value = \"\";\n    conf.value = \"\";\n\n    // Finally submit the form.\n    form.submit();\n    return true;\n}\n\n//# sourceMappingURL=forms-compiled.js.map"]}