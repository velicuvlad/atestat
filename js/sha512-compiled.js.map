{"version":3,"sources":["sha512.js"],"names":[],"mappings":"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","file":"sha512-compiled.js","sourcesContent":["/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-512, as defined\n * in FIPS 180-2\n * Version 2.2 Copyright Anonymous Contributor, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\n/*\n * Configurable variables. You may need to tweak these to be compatible with\n * the server-side, but the defaults work in most cases.\n */\nvar hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */\nvar b64pad  = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\n\n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */\nfunction hex_sha512(s)    { return rstr2hex(rstr_sha512(str2rstr_utf8(s))); }\nfunction b64_sha512(s)    { return rstr2b64(rstr_sha512(str2rstr_utf8(s))); }\nfunction any_sha512(s, e) { return rstr2any(rstr_sha512(str2rstr_utf8(s)), e);}\nfunction hex_hmac_sha512(k, d)\n{ return rstr2hex(rstr_hmac_sha512(str2rstr_utf8(k), str2rstr_utf8(d))); }\nfunction b64_hmac_sha512(k, d)\n{ return rstr2b64(rstr_hmac_sha512(str2rstr_utf8(k), str2rstr_utf8(d))); }\nfunction any_hmac_sha512(k, d, e)\n{ return rstr2any(rstr_hmac_sha512(str2rstr_utf8(k), str2rstr_utf8(d)), e);}\n\n/*\n * Perform a simple self-test to see if the VM is working\n */\nfunction sha512_vm_test()\n{\n    return hex_sha512(\"abc\").toLowerCase() ==\n        \"ddaf35a193617abacc417349ae20413112e6fa4e89a97ea20a9eeee64b55d39a\" +\n        \"2192992a274fc1a836ba3c23a3feebbd454d4423643ce80e2a9ac94fa54ca49f\";\n}\n\n/*\n * Calculate the SHA-512 of a raw string\n */\nfunction rstr_sha512(s)\n{\n    return binb2rstr(binb_sha512(rstr2binb(s), s.length * 8));\n}\n\n/*\n * Calculate the HMAC-SHA-512 of a key and some data (raw strings)\n */\nfunction rstr_hmac_sha512(key, data)\n{\n    var bkey = rstr2binb(key);\n    if(bkey.length > 32) bkey = binb_sha512(bkey, key.length * 8);\n\n    var ipad = Array(32), opad = Array(32);\n    for(var i = 0; i < 32; i++)\n    {\n        ipad[i] = bkey[i] ^ 0x36363636;\n        opad[i] = bkey[i] ^ 0x5C5C5C5C;\n    }\n\n    var hash = binb_sha512(ipad.concat(rstr2binb(data)), 1024 + data.length * 8);\n    return binb2rstr(binb_sha512(opad.concat(hash), 1024 + 512));\n}\n\n/*\n * Convert a raw string to a hex string\n */\nfunction rstr2hex(input)\n{\n    try { hexcase } catch(e) { hexcase=0; }\n    var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n    var output = \"\";\n    var x;\n    for(var i = 0; i < input.length; i++)\n    {\n        x = input.charCodeAt(i);\n        output += hex_tab.charAt((x >>> 4) & 0x0F)\n            +  hex_tab.charAt( x        & 0x0F);\n    }\n    return output;\n}\n\n/*\n * Convert a raw string to a base-64 string\n */\nfunction rstr2b64(input)\n{\n    try { b64pad } catch(e) { b64pad=''; }\n    var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    var output = \"\";\n    var len = input.length;\n    for(var i = 0; i < len; i += 3)\n    {\n        var triplet = (input.charCodeAt(i) << 16)\n            | (i + 1 < len ? input.charCodeAt(i+1) << 8 : 0)\n            | (i + 2 < len ? input.charCodeAt(i+2)      : 0);\n        for(var j = 0; j < 4; j++)\n        {\n            if(i * 8 + j * 6 > input.length * 8) output += b64pad;\n            else output += tab.charAt((triplet >>> 6*(3-j)) & 0x3F);\n        }\n    }\n    return output;\n}\n\n/*\n * Convert a raw string to an arbitrary string encoding\n */\nfunction rstr2any(input, encoding)\n{\n    var divisor = encoding.length;\n    var i, j, q, x, quotient;\n\n    /* Convert to an array of 16-bit big-endian values, forming the dividend */\n    var dividend = Array(Math.ceil(input.length / 2));\n    for(i = 0; i < dividend.length; i++)\n    {\n        dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\n    }\n\n    /*\n     * Repeatedly perform a long division. The binary array forms the dividend,\n     * the length of the encoding is the divisor. Once computed, the quotient\n     * forms the dividend for the next step. All remainders are stored for later\n     * use.\n     */\n    var full_length = Math.ceil(input.length * 8 /\n        (Math.log(encoding.length) / Math.log(2)));\n    var remainders = Array(full_length);\n    for(j = 0; j < full_length; j++)\n    {\n        quotient = Array();\n        x = 0;\n        for(i = 0; i < dividend.length; i++)\n        {\n            x = (x << 16) + dividend[i];\n            q = Math.floor(x / divisor);\n            x -= q * divisor;\n            if(quotient.length > 0 || q > 0)\n                quotient[quotient.length] = q;\n        }\n        remainders[j] = x;\n        dividend = quotient;\n    }\n\n    /* Convert the remainders to the output string */\n    var output = \"\";\n    for(i = remainders.length - 1; i >= 0; i--)\n        output += encoding.charAt(remainders[i]);\n\n    return output;\n}\n\n/*\n * Encode a string as utf-8.\n * For efficiency, this assumes the input is valid utf-16.\n */\nfunction str2rstr_utf8(input)\n{\n    var output = \"\";\n    var i = -1;\n    var x, y;\n\n    while(++i < input.length)\n    {\n        /* Decode utf-16 surrogate pairs */\n        x = input.charCodeAt(i);\n        y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\n        if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF)\n        {\n            x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n            i++;\n        }\n\n        /* Encode output as utf-8 */\n        if(x <= 0x7F)\n            output += String.fromCharCode(x);\n        else if(x <= 0x7FF)\n            output += String.fromCharCode(0xC0 | ((x >>> 6 ) & 0x1F),\n                0x80 | ( x         & 0x3F));\n        else if(x <= 0xFFFF)\n            output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\n                0x80 | ((x >>> 6 ) & 0x3F),\n                0x80 | ( x         & 0x3F));\n        else if(x <= 0x1FFFFF)\n            output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\n                0x80 | ((x >>> 12) & 0x3F),\n                0x80 | ((x >>> 6 ) & 0x3F),\n                0x80 | ( x         & 0x3F));\n    }\n    return output;\n}\n\n/*\n * Encode a string as utf-16\n */\nfunction str2rstr_utf16le(input)\n{\n    var output = \"\";\n    for(var i = 0; i < input.length; i++)\n        output += String.fromCharCode( input.charCodeAt(i)        & 0xFF,\n            (input.charCodeAt(i) >>> 8) & 0xFF);\n    return output;\n}\n\nfunction str2rstr_utf16be(input)\n{\n    var output = \"\";\n    for(var i = 0; i < input.length; i++)\n        output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,\n            input.charCodeAt(i)        & 0xFF);\n    return output;\n}\n\n/*\n * Convert a raw string to an array of big-endian words\n * Characters >255 have their high-byte silently ignored.\n */\nfunction rstr2binb(input)\n{\n    var output = Array(input.length >> 2);\n    for(var i = 0; i < output.length; i++)\n        output[i] = 0;\n    for(var i = 0; i < input.length * 8; i += 8)\n        output[i>>5] |= (input.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);\n    return output;\n}\n\n/*\n * Convert an array of big-endian words to a string\n */\nfunction binb2rstr(input)\n{\n    var output = \"\";\n    for(var i = 0; i < input.length * 32; i += 8)\n        output += String.fromCharCode((input[i>>5] >>> (24 - i % 32)) & 0xFF);\n    return output;\n}\n\n/*\n * Calculate the SHA-512 of an array of big-endian dwords, and a bit length\n */\nvar sha512_k;\nfunction binb_sha512(x, len)\n{\n    if(sha512_k == undefined)\n    {\n        //SHA512 constants\n        sha512_k = new Array(\n            new int64(0x428a2f98, -685199838), new int64(0x71374491, 0x23ef65cd),\n            new int64(-1245643825, -330482897), new int64(-373957723, -2121671748),\n            new int64(0x3956c25b, -213338824), new int64(0x59f111f1, -1241133031),\n            new int64(-1841331548, -1357295717), new int64(-1424204075, -630357736),\n            new int64(-670586216, -1560083902), new int64(0x12835b01, 0x45706fbe),\n            new int64(0x243185be, 0x4ee4b28c), new int64(0x550c7dc3, -704662302),\n            new int64(0x72be5d74, -226784913), new int64(-2132889090, 0x3b1696b1),\n            new int64(-1680079193, 0x25c71235), new int64(-1046744716, -815192428),\n            new int64(-459576895, -1628353838), new int64(-272742522, 0x384f25e3),\n            new int64(0xfc19dc6, -1953704523), new int64(0x240ca1cc, 0x77ac9c65),\n            new int64(0x2de92c6f, 0x592b0275), new int64(0x4a7484aa, 0x6ea6e483),\n            new int64(0x5cb0a9dc, -1119749164), new int64(0x76f988da, -2096016459),\n            new int64(-1740746414, -295247957), new int64(-1473132947, 0x2db43210),\n            new int64(-1341970488, -1728372417), new int64(-1084653625, -1091629340),\n            new int64(-958395405, 0x3da88fc2), new int64(-710438585, -1828018395),\n            new int64(0x6ca6351, -536640913), new int64(0x14292967, 0xa0e6e70),\n            new int64(0x27b70a85, 0x46d22ffc), new int64(0x2e1b2138, 0x5c26c926),\n            new int64(0x4d2c6dfc, 0x5ac42aed), new int64(0x53380d13, -1651133473),\n            new int64(0x650a7354, -1951439906), new int64(0x766a0abb, 0x3c77b2a8),\n            new int64(-2117940946, 0x47edaee6), new int64(-1838011259, 0x1482353b),\n            new int64(-1564481375, 0x4cf10364), new int64(-1474664885, -1136513023),\n            new int64(-1035236496, -789014639), new int64(-949202525, 0x654be30),\n            new int64(-778901479, -688958952), new int64(-694614492, 0x5565a910),\n            new int64(-200395387, 0x5771202a), new int64(0x106aa070, 0x32bbd1b8),\n            new int64(0x19a4c116, -1194143544), new int64(0x1e376c08, 0x5141ab53),\n            new int64(0x2748774c, -544281703), new int64(0x34b0bcb5, -509917016),\n            new int64(0x391c0cb3, -976659869), new int64(0x4ed8aa4a, -482243893),\n            new int64(0x5b9cca4f, 0x7763e373), new int64(0x682e6ff3, -692930397),\n            new int64(0x748f82ee, 0x5defb2fc), new int64(0x78a5636f, 0x43172f60),\n            new int64(-2067236844, -1578062990), new int64(-1933114872, 0x1a6439ec),\n            new int64(-1866530822, 0x23631e28), new int64(-1538233109, -561857047),\n            new int64(-1090935817, -1295615723), new int64(-965641998, -479046869),\n            new int64(-903397682, -366583396), new int64(-779700025, 0x21c0c207),\n            new int64(-354779690, -840897762), new int64(-176337025, -294727304),\n            new int64(0x6f067aa, 0x72176fba), new int64(0xa637dc5, -1563912026),\n            new int64(0x113f9804, -1090974290), new int64(0x1b710b35, 0x131c471b),\n            new int64(0x28db77f5, 0x23047d84), new int64(0x32caab7b, 0x40c72493),\n            new int64(0x3c9ebe0a, 0x15c9bebc), new int64(0x431d67c4, -1676669620),\n            new int64(0x4cc5d4be, -885112138), new int64(0x597f299c, -60457430),\n            new int64(0x5fcb6fab, 0x3ad6faec), new int64(0x6c44198c, 0x4a475817));\n    }\n\n    //Initial hash values\n    var H = new Array(\n        new int64(0x6a09e667, -205731576),\n        new int64(-1150833019, -2067093701),\n        new int64(0x3c6ef372, -23791573),\n        new int64(-1521486534, 0x5f1d36f1),\n        new int64(0x510e527f, -1377402159),\n        new int64(-1694144372, 0x2b3e6c1f),\n        new int64(0x1f83d9ab, -79577749),\n        new int64(0x5be0cd19, 0x137e2179));\n\n    var T1 = new int64(0, 0),\n        T2 = new int64(0, 0),\n        a = new int64(0,0),\n        b = new int64(0,0),\n        c = new int64(0,0),\n        d = new int64(0,0),\n        e = new int64(0,0),\n        f = new int64(0,0),\n        g = new int64(0,0),\n        h = new int64(0,0),\n        //Temporary variables not specified by the document\n        s0 = new int64(0, 0),\n        s1 = new int64(0, 0),\n        Ch = new int64(0, 0),\n        Maj = new int64(0, 0),\n        r1 = new int64(0, 0),\n        r2 = new int64(0, 0),\n        r3 = new int64(0, 0);\n    var j, i;\n    var W = new Array(80);\n    for(i=0; i<80; i++)\n        W[i] = new int64(0, 0);\n\n    // append padding to the source string. The format is described in the FIPS.\n    x[len >> 5] |= 0x80 << (24 - (len & 0x1f));\n    x[((len + 128 >> 10)<< 5) + 31] = len;\n\n    for(i = 0; i<x.length; i+=32) //32 dwords is the block size\n    {\n        int64copy(a, H[0]);\n        int64copy(b, H[1]);\n        int64copy(c, H[2]);\n        int64copy(d, H[3]);\n        int64copy(e, H[4]);\n        int64copy(f, H[5]);\n        int64copy(g, H[6]);\n        int64copy(h, H[7]);\n\n        for(j=0; j<16; j++)\n        {\n            W[j].h = x[i + 2*j];\n            W[j].l = x[i + 2*j + 1];\n        }\n\n        for(j=16; j<80; j++)\n        {\n            //sigma1\n            int64rrot(r1, W[j-2], 19);\n            int64revrrot(r2, W[j-2], 29);\n            int64shr(r3, W[j-2], 6);\n            s1.l = r1.l ^ r2.l ^ r3.l;\n            s1.h = r1.h ^ r2.h ^ r3.h;\n            //sigma0\n            int64rrot(r1, W[j-15], 1);\n            int64rrot(r2, W[j-15], 8);\n            int64shr(r3, W[j-15], 7);\n            s0.l = r1.l ^ r2.l ^ r3.l;\n            s0.h = r1.h ^ r2.h ^ r3.h;\n\n            int64add4(W[j], s1, W[j-7], s0, W[j-16]);\n        }\n\n        for(j = 0; j < 80; j++)\n        {\n            //Ch\n            Ch.l = (e.l & f.l) ^ (~e.l & g.l);\n            Ch.h = (e.h & f.h) ^ (~e.h & g.h);\n\n            //Sigma1\n            int64rrot(r1, e, 14);\n            int64rrot(r2, e, 18);\n            int64revrrot(r3, e, 9);\n            s1.l = r1.l ^ r2.l ^ r3.l;\n            s1.h = r1.h ^ r2.h ^ r3.h;\n\n            //Sigma0\n            int64rrot(r1, a, 28);\n            int64revrrot(r2, a, 2);\n            int64revrrot(r3, a, 7);\n            s0.l = r1.l ^ r2.l ^ r3.l;\n            s0.h = r1.h ^ r2.h ^ r3.h;\n\n            //Maj\n            Maj.l = (a.l & b.l) ^ (a.l & c.l) ^ (b.l & c.l);\n            Maj.h = (a.h & b.h) ^ (a.h & c.h) ^ (b.h & c.h);\n\n            int64add5(T1, h, s1, Ch, sha512_k[j], W[j]);\n            int64add(T2, s0, Maj);\n\n            int64copy(h, g);\n            int64copy(g, f);\n            int64copy(f, e);\n            int64add(e, d, T1);\n            int64copy(d, c);\n            int64copy(c, b);\n            int64copy(b, a);\n            int64add(a, T1, T2);\n        }\n        int64add(H[0], H[0], a);\n        int64add(H[1], H[1], b);\n        int64add(H[2], H[2], c);\n        int64add(H[3], H[3], d);\n        int64add(H[4], H[4], e);\n        int64add(H[5], H[5], f);\n        int64add(H[6], H[6], g);\n        int64add(H[7], H[7], h);\n    }\n\n    //represent the hash as an array of 32-bit dwords\n    var hash = new Array(16);\n    for(i=0; i<8; i++)\n    {\n        hash[2*i] = H[i].h;\n        hash[2*i + 1] = H[i].l;\n    }\n    return hash;\n}\n\n//A constructor for 64-bit numbers\nfunction int64(h, l)\n{\n    this.h = h;\n    this.l = l;\n    //this.toString = int64toString;\n}\n\n//Copies src into dst, assuming both are 64-bit numbers\nfunction int64copy(dst, src)\n{\n    dst.h = src.h;\n    dst.l = src.l;\n}\n\n//Right-rotates a 64-bit number by shift\n//Won't handle cases of shift>=32\n//The function revrrot() is for that\nfunction int64rrot(dst, x, shift)\n{\n    dst.l = (x.l >>> shift) | (x.h << (32-shift));\n    dst.h = (x.h >>> shift) | (x.l << (32-shift));\n}\n\n//Reverses the dwords of the source and then rotates right by shift.\n//This is equivalent to rotation by 32+shift\nfunction int64revrrot(dst, x, shift)\n{\n    dst.l = (x.h >>> shift) | (x.l << (32-shift));\n    dst.h = (x.l >>> shift) | (x.h << (32-shift));\n}\n\n//Bitwise-shifts right a 64-bit number by shift\n//Won't handle shift>=32, but it's never needed in SHA512\nfunction int64shr(dst, x, shift)\n{\n    dst.l = (x.l >>> shift) | (x.h << (32-shift));\n    dst.h = (x.h >>> shift);\n}\n\n//Adds two 64-bit numbers\n//Like the original implementation, does not rely on 32-bit operations\nfunction int64add(dst, x, y)\n{\n    var w0 = (x.l & 0xffff) + (y.l & 0xffff);\n    var w1 = (x.l >>> 16) + (y.l >>> 16) + (w0 >>> 16);\n    var w2 = (x.h & 0xffff) + (y.h & 0xffff) + (w1 >>> 16);\n    var w3 = (x.h >>> 16) + (y.h >>> 16) + (w2 >>> 16);\n    dst.l = (w0 & 0xffff) | (w1 << 16);\n    dst.h = (w2 & 0xffff) | (w3 << 16);\n}\n\n//Same, except with 4 addends. Works faster than adding them one by one.\nfunction int64add4(dst, a, b, c, d)\n{\n    var w0 = (a.l & 0xffff) + (b.l & 0xffff) + (c.l & 0xffff) + (d.l & 0xffff);\n    var w1 = (a.l >>> 16) + (b.l >>> 16) + (c.l >>> 16) + (d.l >>> 16) + (w0 >>> 16);\n    var w2 = (a.h & 0xffff) + (b.h & 0xffff) + (c.h & 0xffff) + (d.h & 0xffff) + (w1 >>> 16);\n    var w3 = (a.h >>> 16) + (b.h >>> 16) + (c.h >>> 16) + (d.h >>> 16) + (w2 >>> 16);\n    dst.l = (w0 & 0xffff) | (w1 << 16);\n    dst.h = (w2 & 0xffff) | (w3 << 16);\n}\n\n//Same, except with 5 addends\nfunction int64add5(dst, a, b, c, d, e)\n{\n    var w0 = (a.l & 0xffff) + (b.l & 0xffff) + (c.l & 0xffff) + (d.l & 0xffff) + (e.l & 0xffff);\n    var w1 = (a.l >>> 16) + (b.l >>> 16) + (c.l >>> 16) + (d.l >>> 16) + (e.l >>> 16) + (w0 >>> 16);\n    var w2 = (a.h & 0xffff) + (b.h & 0xffff) + (c.h & 0xffff) + (d.h & 0xffff) + (e.h & 0xffff) + (w1 >>> 16);\n    var w3 = (a.h >>> 16) + (b.h >>> 16) + (c.h >>> 16) + (d.h >>> 16) + (e.h >>> 16) + (w2 >>> 16);\n    dst.l = (w0 & 0xffff) | (w1 << 16);\n    dst.h = (w2 & 0xffff) | (w3 << 16);\n}"]}