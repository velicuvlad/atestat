{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main-compiled.js","sourcesContent":["var CreateProductComponent = React.createClass({\n\n    getInitialState: function() {\n        return {\n            categories: [],\n            selectedCategoryId: -1,\n            name: '',\n            description: '',\n            price: '',\n            successCreation: null\n        };\n    },\n\n    componentDidMount: function() {\n        this.serverRequest = $.get(\"api/read_all_categories.php\", function (categories) {\n            this.setState({\n                categories: JSON.parse(categories)\n            });\n        }.bind(this));\n\n        $('.page-header h1').text('Create product');\n    },\n\n    componentWillUnmount: function() {\n        this.serverRequest.abort();\n    },\n\n    // handle category change\n    onCategoryChange: function(e) {\n        this.setState({selectedCategoryId: e.target.value});\n    },\n\n// handle name change\n    onNameChange: function(e) {\n        this.setState({name: e.target.value});\n    },\n\n// handle description change\n    onDescriptionChange: function(e) {\n        this.setState({description: e.target.value});\n    },\n\n// handle price change\n    onPriceChange: function(e) {\n        this.setState({price: e.target.value});\n    },\n\n    onSave: function(e){\n        $.post(\"api/create_product.php\", {\n                name: this.state.name,\n                description: this.state.description,\n                price: this.state.price,\n                category_id: this.state.selectedCategoryId\n            },\n            function(res){\n                this.setState({successCreation: res});\n                this.setState({name: \"\"});\n                this.setState({description: \"\"});\n                this.setState({price: \"\"});\n                this.setState({selectedCategoryId: -1});\n            }.bind(this)\n        );\n        e.preventDefault();\n    },\n\n    render: function() {\n\n        // make categories as option for the select tag.\n        var categoriesOptions = this.state.categories.map(function(category){\n            return (\n                <option key={category.id} value={category.id}>{category.name}</option>\n            );\n        });\n\n        /*\n         - tell the user if a product was created\n         - tell the user if unable to create product\n         - button to go back to products list\n         - form to create a product\n         */\n        return (\n            <div>\n                {\n\n                    this.state.successCreation == \"true\" ?\n                        <div className='alert alert-success'>\n                            Product was saved.\n                        </div>\n                        : null\n                }\n\n                {\n\n                    this.state.successCreation == \"false\" ?\n                        <div className='alert alert-danger'>\n                            Unable to save product. Please try again.\n                        </div>\n                        : null\n                }\n\n                <a href='#'\n                   onClick={() => this.props.changeAppMode('read')}\n                   className='btn btn-primary margin-bottom-1em'> Read Products\n                </a>\n\n\n                <form onSubmit={this.onSave}>\n                    <table className='table table-bordered table-hover'>\n                        <tbody>\n                        <tr>\n                            <td>Name</td>\n                            <td>\n                                <input\n                                    type='text'\n                                    className='form-control'\n                                    value={this.state.name}\n                                    required\n                                    onChange={this.onNameChange} />\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>Description</td>\n                            <td>\n                        <textarea\n                            type='text'\n                            className='form-control'\n                            required\n                            value={this.state.description}\n                            onChange={this.onDescriptionChange}>\n                        </textarea>\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>Price ($)</td>\n                            <td>\n                                <input\n                                    type='number'\n                                    step=\"0.01\"\n                                    className='form-control'\n                                    value={this.state.price}\n                                    required\n                                    onChange={this.onPriceChange}/>\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>Category</td>\n                            <td>\n                                <select\n                                    onChange={this.onCategoryChange}\n                                    className='form-control'\n                                    value={this.state.selectedCategoryId}>\n                                    <option value=\"-1\">Select category...</option>\n                                    {categoriesOptions}\n                                </select>\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td></td>\n                            <td>\n                                <button\n                                    className='btn btn-primary'\n                                    onClick={this.onSave}>Save</button>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </form>\n            </div>\n        );\n    }\n\n});\n\n// component that renders a single product\nvar ProductRow = React.createClass({\n    render: function() {\n        return (\n            <tr>\n                <td>{this.props.product.name}</td>\n                <td>{this.props.product.description}</td>\n                <td>${parseFloat(this.props.product.price).toFixed(2)}</td>\n                <td>{this.props.product.category_name}</td>\n                <td>\n                    <a href='#'\n                       onClick={() => this.props.changeAppMode('readOne', this.props.product.id)}\n                       className='btn btn-info m-r-1em'> Read\n                    </a>\n                    <a href='#'\n                       onClick={() => this.props.changeAppMode('update', this.props.product.id)}\n                       className='btn btn-primary m-r-1em'> Edit\n                    </a>\n                    <a\n                        onClick={() => this.props.changeAppMode('delete', this.props.product.id)}\n                        className='btn btn-danger'> Delete\n                    </a>\n                </td>\n            </tr>\n        );\n    }\n});\n\n// component for the whole products table\nvar ProductsTable = React.createClass({\n    render: function() {\n\n        var rows = this.props.products\n            .map(function(product, i) {\n                return (\n                    <ProductRow\n                        key={i}\n                        product={product}\n                        changeAppMode={this.props.changeAppMode} />\n                );\n            }.bind(this));\n\n        return(\n            !rows.length\n                ? <div className='alert alert-danger'>No products found.</div>\n                :\n                <table className='table table-bordered table-hover'>\n                    <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>Price</th>\n                        <th>Category</th>\n                        <th>Action</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {rows}\n                    </tbody>\n                </table>\n        );\n    }\n});\n\nvar TopActionsComponent = React.createClass({\n    render: function() {\n        return (\n            <div>\n                <a href='#'\n                   onClick={() => this.props.changeAppMode('create')}\n                   className='btn btn-primary margin-bottom-1em'> Create product\n                </a>\n            </div>\n        );\n    }\n});\n\nvar ReadProductsComponent = React.createClass({\n    getInitialState: function() {\n        return {\n            products: []\n        };\n    },\n\n    // on mount, fetch all products and stored them as this component's state\n    componentDidMount: function() {\n        this.serverRequest = $.get(\"api/read_all_products.php\", function (products) {\n            this.setState({\n                products: JSON.parse(products)\n            });\n        }.bind(this));\n    },\n\n    // on unmount, kill product fetching in case the request is still pending\n    componentWillUnmount: function() {\n        this.serverRequest.abort();\n    },\n\n    render: function() {\n        // list of products\n        var filteredProducts = this.state.products;\n        $('.page-header h1').text('Read Products');\n\n        return (\n            <div className='overflow-hidden'>\n                <TopActionsComponent changeAppMode={this.props.changeAppMode} />\n\n                <ProductsTable\n                    products={filteredProducts}\n                    changeAppMode={this.props.changeAppMode} />\n            </div>\n        );\n    }\n});\n\nvar ReadOneProductComponent = React.createClass({\n\n    getInitialState: function() {\n        // make sure that no other values are set\n        return {\n            id: 0,\n            name: '',\n            description: '',\n            price: 0,\n            category_name: ''\n        };\n    },\n\n    // on mount, read one product based on given product ID\n    componentDidMount: function() {\n\n        var productId = this.props.productId;\n\n        this.serverRequestProd = $.post(\"api/read_one_product.php\",\n            {prod_id: productId},\n            function (product) {\n                var p = JSON.parse(product)[0];\n                this.setState({category_name: p.category_name});\n                this.setState({id: p.id});\n                this.setState({name: p.name});\n                this.setState({description: p.description});\n                this.setState({price: p.price});\n            }.bind(this));\n\n        $('.page-header h1').text('Read Product');\n    },\n\n    // on unmount, kill fetching the product data in case the request is still pending\n    componentWillUnmount: function() {\n        this.serverRequestProd.abort();\n    },\n\n    // show single product data on a table\n    render: function() {\n\n        return (\n            <div>\n                <a href='#'\n                   onClick={() => this.props.changeAppMode('read')}\n                   className='btn btn-primary margin-bottom-1em'>\n                    Read Products\n                </a>\n\n                <form onSubmit={this.onSave}>\n                    <table className='table table-bordered table-hover'>\n                        <tbody>\n                        <tr>\n                            <td>Name</td>\n                            <td>{this.state.name}</td>\n                        </tr>\n\n                        <tr>\n                            <td>Description</td>\n                            <td>{this.state.description}</td>\n                        </tr>\n\n                        <tr>\n                            <td>Price ($)</td>\n                            <td>${parseFloat(this.state.price).toFixed(2)}</td>\n                        </tr>\n\n                        <tr>\n                            <td>Category</td>\n                            <td>{this.state.category_name}</td>\n                        </tr>\n\n                        </tbody>\n                    </table>\n                </form>\n            </div>\n        );\n    }\n});\n\nvar UpdateProductComponent = React.createClass({\n\n    getInitialState: function() {\n        return {\n            categories: [],\n            selectedCategoryId: 0,\n            id: 0,\n            name: '',\n            description: '',\n            price: 0,\n            successUpdate: null\n        };\n    },\n\n    componentDidMount: function() {\n        this.serverRequestCat = $.get(\"api/read_all_categories.php\", function (categories) {\n            this.setState({\n                categories: JSON.parse(categories)\n            });\n        }.bind(this));\n\n        var productId = this.props.productId;\n        this.serverRequestProd = $.post(\"api/read_one_product.php\",\n            {prod_id: productId},\n            function (product) {\n                var p = JSON.parse(product)[0];\n                this.setState({selectedCategoryId: p.category_id});\n                this.setState({id: p.id});\n                this.setState({name: p.name});\n                this.setState({description: p.description});\n                this.setState({price: p.price});\n            }.bind(this));\n\n        $('.page-header h1').text('Update product');\n    },\n\n    componentWillUnmount: function() {\n        this.serverRequestCat.abort();\n        this.serverRequestProd.abort();\n    },\n\n    // handle category change\n    onCategoryChange: function(e) {\n        this.setState({selectedCategoryId: e.target.value});\n    },\n\n// handle name change\n    onNameChange: function(e) {\n        this.setState({name: e.target.value});\n    },\n\n// handle description change\n    onDescriptionChange: function(e) {\n        this.setState({description: e.target.value});\n    },\n\n// handle price change\n    onPriceChange: function(e) {\n        this.setState({price: e.target.value});\n    },\n\n    onSave: function(e){\n        $.post(\"api/update_product.php\", {\n                id: this.state.id,\n                name: this.state.name,\n                description: this.state.description,\n                price: this.state.price,\n                category_id: this.state.selectedCategoryId\n            },\n            function(res){\n                this.setState({successUpdate: res});\n            }.bind(this)\n        );\n        e.preventDefault();\n    },\n\n    render: function() {\n        var categoriesOptions = this.state.categories.map(function(category){\n            return (\n                <option key={category.id} value={category.id}>{category.name}</option>\n            );\n        });\n\n        return (\n            <div>\n                {\n                    this.state.successUpdate == \"true\" ?\n                        <div className='alert alert-success'>\n                            Product was updated.\n                        </div>\n                        : null\n                }\n\n                {\n                    this.state.successUpdate == \"false\" ?\n                        <div className='alert alert-danger'>\n                            Unable to update product. Please try again.\n                        </div>\n                        : null\n                }\n\n                <a href='#'\n                   onClick={() => this.props.changeAppMode('read')}\n                   className='btn btn-primary margin-bottom-1em'>\n                    Read Products\n                </a>\n\n                <form onSubmit={this.onSave}>\n                    <table className='table table-bordered table-hover'>\n                        <tbody>\n                        <tr>\n                            <td>Name</td>\n                            <td>\n                                <input\n                                    type='text'\n                                    className='form-control'\n                                    value={this.state.name}\n                                    required\n                                    onChange={this.onNameChange} />\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>Description</td>\n                            <td>\n                            <textarea\n                                type='text'\n                                className='form-control'\n                                required\n                                value={this.state.description}\n                                onChange={this.onDescriptionChange}></textarea>\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>Price ($)</td>\n                            <td>\n                                <input\n                                    type='number'\n                                    step=\"0.01\"\n                                    className='form-control'\n                                    value={this.state.price}\n                                    required\n                                    onChange={this.onPriceChange}/>\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>Category</td>\n                            <td>\n                                <select\n                                    onChange={this.onCategoryChange}\n                                    className='form-control'\n                                    value={this.state.selectedCategoryId}>\n                                    <option value=\"-1\">Select category...</option>\n                                    {categoriesOptions}\n                                </select>\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td></td>\n                            <td>\n                                <button\n                                    className='btn btn-primary'\n                                    onClick={this.onSave}>Save Changes</button>\n                            </td>\n                        </tr>\n\n                        </tbody>\n                    </table>\n                </form>\n            </div>\n        );\n    }\n\n});\n\nvar DeleteProductComponent = React.createClass({\n\n    componentDidMount: function() {\n        $('.page-header h1').text('Delete product');\n    },\n\n    onDelete: function(e){\n        var productId = this.props.productId;\n\n        $.post(\"api/delete_products.php\",\n            { del_ids: [productId] },\n            function(res){\n                this.props.changeAppMode('read');\n            }.bind(this)\n        );\n    },\n\n    render: function() {\n\n        return (\n            <div className='row'>\n                <div className='col-md-3'></div>\n                <div className='col-md-6'>\n                    <div className='panel panel-default'>\n                        <div className='panel-body text-align-center'>Are you sure?</div>\n                        <div className='panel-footer clearfix'>\n                            <div className='text-align-center'>\n                                <button onClick={this.onDelete}\n                                        className='btn btn-danger m-r-1em'>Yes</button>\n                                <button onClick={() => this.props.changeAppMode('read')}\n                                        className='btn btn-primary'>No</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='col-md-3'></div>\n            </div>\n        );\n    }\n});\n\nvar MainApp = React.createClass({\n\n    getInitialState: function() {\n        return {\n            currentMode: 'read',\n            productId: null\n        };\n    },\n\n    changeAppMode: function(newMode, productId){\n        this.setState({currentMode: newMode});\n\n        if(productId !== undefined){\n            this.setState({productId: productId});\n        }\n    },\n\n    render: function() {\n\n        var modeComponent =\n            <ReadProductsComponent\n                changeAppMode={this.changeAppMode} />;\n\n        switch(this.state.currentMode){\n            case 'read':\n                break;\n            case 'readOne':\n                modeComponent = <ReadOneProductComponent productId={this.state.productId} changeAppMode={this.changeAppMode}/>;\n                break;\n            case 'create':\n                modeComponent = <CreateProductComponent changeAppMode={this.changeAppMode}/>;\n                break;\n            case 'update':\n                modeComponent = <UpdateProductComponent productId={this.state.productId} changeAppMode={this.changeAppMode}/>;\n                break;\n            case 'delete':\n                modeComponent = <DeleteProductComponent productId={this.state.productId} changeAppMode={this.changeAppMode}/>;\n                break;\n            default:\n                break;\n        }\n\n        return modeComponent;\n    }\n});\n\nReactDOM.render(\n    <MainApp />,\n    document.getElementById('content')\n);"]}